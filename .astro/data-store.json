[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.7.4","content-config-digest","c60ff1f354e02838","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":false,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":\"127.0.0.1\",\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":{\"type\":\"shiki\",\"excludeLangs\":[\"math\"]},\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false},\"session\":{\"driver\":\"fs-lite\",\"options\":{\"base\":\"/Users/jeeminhan/Documents/portfolio-2/node_modules/.astro/sessions\"}}}","blog",["Map",11,12,37,38,60,61,78,79,99,100,122,123,142,143,197,198,224,225,319,320],"merror",{"id":11,"data":13,"body":20,"filePath":21,"assetImports":22,"digest":24,"rendered":25},{"icon":14,"title":15,"description":16,"pubDate":17,"heroImage":18,"previewImage":19},"1","MError","Smart Mirror ",["Date","2024-06-18T15:00:00.000Z"],"/src/assets/preview2.jpg","/src/assets/preview1.jpg","## Merror\n\nMerror is a smart mirror that was made though a raspbeery Pi that used open computer vision's face recognition library to provide a tailored smart mirror experience. \n\n![Graphic 1](../../assets/MError.png)\n\n[Report](https://drive.google.com/file/d/1kLCtPJQI25DSA268RUAyO7kjYhL2Uo3V/view?usp=sharing)","src/content/blog/MeRror.md",[23],"../../assets/MError.png","52ea5b3649e7db9f",{"html":26,"metadata":27},"\u003Ch2 id=\"merror\">Merror\u003C/h2>\n\u003Cp>Merror is a smart mirror that was made though a raspbeery Pi that used open computer vision’s face recognition library to provide a tailored smart mirror experience.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../assets/MError.png&#x22;,&#x22;alt&#x22;:&#x22;Graphic 1&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>\u003Ca href=\"https://drive.google.com/file/d/1kLCtPJQI25DSA268RUAyO7kjYhL2Uo3V/view?usp=sharing\">Report\u003C/a>\u003C/p>",{"headings":28,"localImagePaths":32,"remoteImagePaths":33,"frontmatter":34,"imagePaths":36},[29],{"depth":30,"slug":11,"text":31},2,"Merror",[23],[],{"title":15,"description":16,"previewImage":19,"pubDate":35,"icon":14,"heroImage":18},"Jun 19 2024",[23],"ecen-454",{"id":37,"data":39,"body":44,"filePath":45,"digest":46,"rendered":47},{"icon":14,"title":40,"description":41,"pubDate":42,"heroImage":43,"previewImage":19},"Digital 1 Bit Adder","1 bit adder built using NI Circuit Design ",["Date","2022-12-18T15:00:00.000Z"],"/src/assets/1bitadder.png","# Single Cycle Processor\nFor my Digital Circuit Design class I created a 1 bit adder digitally using circuit design software. Although we did create more complex projects in this class this one was nice because I had created an adder physically before, and so to create one digitally was satisfying.\n\n\n[Lab Report](https://drive.google.com/file/d/13_w2qN7wZl1lmYaQhCGonEEqKgmksWSF/view?usp=sharing)","src/content/blog/ecen-454.md","d4bcaf73aa732edb",{"html":48,"metadata":49},"\u003Ch1 id=\"single-cycle-processor\">Single Cycle Processor\u003C/h1>\n\u003Cp>For my Digital Circuit Design class I created a 1 bit adder digitally using circuit design software. Although we did create more complex projects in this class this one was nice because I had created an adder physically before, and so to create one digitally was satisfying.\u003C/p>\n\u003Cp>\u003Ca href=\"https://drive.google.com/file/d/13_w2qN7wZl1lmYaQhCGonEEqKgmksWSF/view?usp=sharing\">Lab Report\u003C/a>\u003C/p>",{"headings":50,"localImagePaths":55,"remoteImagePaths":56,"frontmatter":57,"imagePaths":59},[51],{"depth":52,"slug":53,"text":54},1,"single-cycle-processor","Single Cycle Processor",[],[],{"title":40,"description":41,"previewImage":19,"pubDate":58,"icon":14,"heroImage":43},"Dec 19 2022",[],"computer-arch",{"id":60,"data":62,"body":66,"filePath":67,"digest":68,"rendered":69},{"icon":14,"title":54,"description":63,"pubDate":64,"heroImage":65,"previewImage":19},"Processor ",["Date","2022-12-18T15:00:00.000Z"],"/src/assets/scp.png","# Single Cycle Processor\n\nIn my computer architecture class I created a single cycle processor as well as test cases associated with it.","src/content/blog/computer-arch.md","22ef3453fd6089f8",{"html":70,"metadata":71},"\u003Ch1 id=\"single-cycle-processor\">Single Cycle Processor\u003C/h1>\n\u003Cp>In my computer architecture class I created a single cycle processor as well as test cases associated with it.\u003C/p>",{"headings":72,"localImagePaths":74,"remoteImagePaths":75,"frontmatter":76,"imagePaths":77},[73],{"depth":52,"slug":53,"text":54},[],[],{"title":54,"description":63,"previewImage":19,"pubDate":58,"icon":14,"heroImage":65},[],"graphics",{"id":78,"data":80,"body":85,"filePath":86,"digest":87,"rendered":88},{"icon":14,"title":81,"description":82,"pubDate":83,"heroImage":84,"previewImage":19},"Ray Tracer","Ray Tracing graphics",["Date","2024-06-18T15:00:00.000Z"],"/src/assets/raytracer.png","# English\n\nIn my computer graphics class one of our final projects we did was creating a ray tracer using the open computer graphics library.","src/content/blog/graphics.md","4f282452a25527b0",{"html":89,"metadata":90},"\u003Ch1 id=\"english\">English\u003C/h1>\n\u003Cp>In my computer graphics class one of our final projects we did was creating a ray tracer using the open computer graphics library.\u003C/p>",{"headings":91,"localImagePaths":95,"remoteImagePaths":96,"frontmatter":97,"imagePaths":98},[92],{"depth":52,"slug":93,"text":94},"english","English",[],[],{"title":81,"description":82,"previewImage":19,"pubDate":35,"icon":14,"heroImage":84},[],"kcf-technologies",{"id":99,"data":101,"body":106,"filePath":107,"assetImports":108,"digest":110,"rendered":111},{"icon":14,"title":102,"description":103,"pubDate":104,"heroImage":105,"previewImage":19},"Sensor Automation","3 month Internship in Pennsylvania",["Date","2024-06-18T15:00:00.000Z"],"/src/assets/kcf1.jpg","## Sensor Testing Austomation Program\n\nDuring my 3 month internship at KCF Technologies I designed and created a program script using Python to automate testing of these vibration sensors.\n\n![Graphic 1](../../assets/kcf2.jpg)","src/content/blog/kcf-technologies.md",[109],"../../assets/kcf2.jpg","e7ce76b7681675fd",{"html":112,"metadata":113},"\u003Ch2 id=\"sensor-testing-austomation-program\">Sensor Testing Austomation Program\u003C/h2>\n\u003Cp>During my 3 month internship at KCF Technologies I designed and created a program script using Python to automate testing of these vibration sensors.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../assets/kcf2.jpg&#x22;,&#x22;alt&#x22;:&#x22;Graphic 1&#x22;,&#x22;index&#x22;:0}\">\u003C/p>",{"headings":114,"localImagePaths":118,"remoteImagePaths":119,"frontmatter":120,"imagePaths":121},[115],{"depth":30,"slug":116,"text":117},"sensor-testing-austomation-program","Sensor Testing Austomation Program",[109],[],{"title":102,"description":103,"previewImage":19,"pubDate":35,"icon":14,"heroImage":105},[109],"ecen-248",{"id":122,"data":124,"body":129,"filePath":130,"digest":131,"rendered":132},{"icon":14,"title":125,"description":126,"pubDate":127,"heroImage":128,"previewImage":19},"Full Adder","Full adder built by hand ",["Date","2024-06-18T15:00:00.000Z"],"/src/assets/Adder.png","## Full Adder\n\nFor my circuit design class I created a full adder using circuits.","src/content/blog/ecen-248.md","1bb17368f558dd5e",{"html":133,"metadata":134},"\u003Ch2 id=\"full-adder\">Full Adder\u003C/h2>\n\u003Cp>For my circuit design class I created a full adder using circuits.\u003C/p>",{"headings":135,"localImagePaths":138,"remoteImagePaths":139,"frontmatter":140,"imagePaths":141},[136],{"depth":30,"slug":137,"text":125},"full-adder",[],[],{"title":125,"description":126,"previewImage":19,"pubDate":35,"icon":14,"heroImage":128},[],"musentiment",{"id":142,"data":144,"body":150,"filePath":151,"digest":152,"rendered":153},{"icon":14,"title":145,"description":146,"pubDate":147,"heroImage":148,"previewImage":19,"youtube":149},"MuSentiment","Datathon Project ",["Date","2022-12-18T15:00:00.000Z"],"/src/assets/datathon.jpg","https://youtu.be/nB-ANWVcaek","# MuSentiment\n## Texas A&amp;M Datathon Repository\nGITHUB (https://github.com/jeeminhan/MuSentiment)\n\n## Our approach\nOur approach to the problem was multi-faceted. When we first started our problem we tried to approach things in a top-down fashion, by having some idea of what the data would look like and creating our models based on that. We realized as we kept going that a lot of what we had in mind wasn't working out. We expected to find certain things in the data but it was hard for us to find those correlations in the data. That's why we turned to a more bottom-up approach where collecting data became our top priority.\n\nThe first data we scraped was the depression dataset which came from the CDC (https://wwwn.cdc.gov/nchs/nhanes/continuousnhanes/default.aspx?BeginYear=2007). We used Python's BeautifulSoup and Requests libraries. Data collected was the proportion of all respondents that chose the option of \"Several days\", \"More than half of the days\", and Nearly every day\". \n\nThe same process was used to collect data on drug use in the United States. \n\nData about songs were collected in multiple different places but eventually cleaned and aggregated together. The top songs of the year were found from Billboard's top 100 list. Taking the artist and title of the song, the genius API was employed to return the lyrics for each song. This data was manipulated through NLTK's sentiment analysis to determine the positive, negative, neutral, and compound values. Finally, the Spotify Web API was used to determine more attributes of the top songs of each year. \n\n## Description of Data Collected\n\n * [Master-Song-Dataset.csv](https://github.com/jeeminhan/MuSentiment/blob/main/Master_Song_Dataset.csv) - Collection of Billboard Songs, Lyrics, Spotify Features, and Sentiment Analysis\n * [depression-data.csv](https://github.com/jeeminhan/MuSentiment/blob/main/depression_data.csv) - Data collected about depression from the CDC\n * [drug_datacsv.csv](https://github.com/jeeminhan/MuSentiment/blob/main/drug_datacsv.csv) - Data collected about drug usage from the CDC\n * [Lyrics](https://github.com/jeeminhan/MuSentiment/tree/main/Lyrics) - Lyrics collected into individual textfiles for each song\n\n## Analysis\nThe main idea of the project was to see if popular songs and their possible message would affect the general population's mental health. The average depression rate was compared to the average positive and negative sentiment rating on top songs.\n\n### Depression vs Song\n\n![image](https://user-images.githubusercontent.com/72060730/137621202-66802374-b25f-4cb5-bf79-73cc67ec8ed0.png)\n\nAlthough nothing is conclusive, there may be some correlation between depression and positive songs. One hypothesis our group established was that as people were struggling more with their mental health (2008), they turned to happier music which raised the overall score (as seen in 2010). \n\n\n\n\n\n\n### Drug usage vs song\n\nA similar comparison was made with drug usage as well. However, there is not much correlation found between drug usage and song sentiment. \n\n![image](https://user-images.githubusercontent.com/72060730/137621126-f4fb3e47-a24e-4103-a145-af7d2585eafa.png)\n\n\n### Regression Model\n\nWith the data collected from the Spotify API, we wanted to see if different factors (such as tempo, energy, key) would also have a direct relationship with negative sentiment. A regression model was created. The model was split 0.67-0.33 training/testing and had a root mean squared error of 0.0036. The result of the prediction is shown below\n\n![image](https://user-images.githubusercontent.com/72060730/137621145-caa1177c-6bfb-499c-a4c6-10d11f3575e2.png)\n\n\n### Word Clouds\nThe most commonly used words in the 25 most \"negative\" songs are:\n\n![image](https://user-images.githubusercontent.com/72060730/137620645-2f4d5d47-69a2-4393-846d-d131b3229c68.png)\n\n*A profanity filter had to be run as profane words were heavily used\n\n\nThe most commonly used words in the 25 most \"positive\" songs are:\n\n![image](https://user-images.githubusercontent.com/72060730/137621983-522b5bfc-0d33-474d-8dcf-7395dd8b90d0.png)\n\nThese word clouds helped us understand better specific words that were the most influential on sentiment. \n\n### Yearly Trends\nAdditionally, we were able to look at the trend of the percentage of positive, negative, and neutral tendencies of songs per year.\n\n![image](https://user-images.githubusercontent.com/72060730/137620684-f21e7832-9edf-418f-b4bb-26e41006f7b4.png)\n\n![image](https://user-images.githubusercontent.com/72060730/137620690-7d447b37-8080-4c39-930f-a8df44fce3e7.png)\n\n![image](https://user-images.githubusercontent.com/72060730/137620692-d98aa578-c3ab-4aec-b46d-598bbca29f84.png)\n\n![image](https://user-images.githubusercontent.com/72060730/137620695-38e53ee8-2180-4e00-856f-76525fe3c884.png)\n\n![image](https://user-images.githubusercontent.com/72060730/137620696-43fa7c4b-9f53-4cfb-aa0b-2a70fef1c2b5.png)\n\n![image](https://user-images.githubusercontent.com/72060730/137620698-838060e9-8197-4375-a42f-a7953c0c2c39.png)\n\n![image](https://user-images.githubusercontent.com/72060730/137620700-a77db526-6ca0-4ce4-8c3e-421dc02c345c.png)\n\n![image](https://user-images.githubusercontent.com/72060730/137620701-7519db31-36b6-45e6-9e51-e93754a37d93.png)\n\n\nThe sporadic nature of the graphs made it hard to really analyze trends. This is possibly due to the fact that humans are so different that their song choice will not always go by a pattern. Our moods/weather/time of day plays a big role in what kind of music we listen to. \n\n\n## Reflection\n\nThere were a lot of challenges that we had to face, but we think one of the biggest ones was definitely analyzing the data that we scraped and trying to find the relationships or lack thereof between them. One of the things that made it hard to find relationships between the data was the fact that a lot of census data on depression and drug usage was collected every two years. That’s a lot of time between each of the points and so analyzing any relationships was not as accurate as we would like. There was not much we could do about this as we wanted to work with the CDC’s data and so had to make do with what we had. If we had more time we would have liked to look for more data and try to look through different relationships to see if there were any more important findings in the various datasets we created.\n\n\n#### Bonus star\n\n\n![image](https://user-images.githubusercontent.com/72060730/137617470-ec425abc-802d-406d-9688-de485173b69e.png)","src/content/blog/musentiment.md","3d7276186a0e28cb",{"html":154,"metadata":155},"\u003Ch1 id=\"musentiment\">MuSentiment\u003C/h1>\n\u003Ch2 id=\"texas-am-datathon-repository\">Texas A&#x26;M Datathon Repository\u003C/h2>\n\u003Cp>GITHUB (\u003Ca href=\"https://github.com/jeeminhan/MuSentiment\">https://github.com/jeeminhan/MuSentiment\u003C/a>)\u003C/p>\n\u003Ch2 id=\"our-approach\">Our approach\u003C/h2>\n\u003Cp>Our approach to the problem was multi-faceted. When we first started our problem we tried to approach things in a top-down fashion, by having some idea of what the data would look like and creating our models based on that. We realized as we kept going that a lot of what we had in mind wasn’t working out. We expected to find certain things in the data but it was hard for us to find those correlations in the data. That’s why we turned to a more bottom-up approach where collecting data became our top priority.\u003C/p>\n\u003Cp>The first data we scraped was the depression dataset which came from the CDC (\u003Ca href=\"https://wwwn.cdc.gov/nchs/nhanes/continuousnhanes/default.aspx?BeginYear=2007\">https://wwwn.cdc.gov/nchs/nhanes/continuousnhanes/default.aspx?BeginYear=2007\u003C/a>). We used Python’s BeautifulSoup and Requests libraries. Data collected was the proportion of all respondents that chose the option of “Several days”, “More than half of the days”, and Nearly every day”.\u003C/p>\n\u003Cp>The same process was used to collect data on drug use in the United States.\u003C/p>\n\u003Cp>Data about songs were collected in multiple different places but eventually cleaned and aggregated together. The top songs of the year were found from Billboard’s top 100 list. Taking the artist and title of the song, the genius API was employed to return the lyrics for each song. This data was manipulated through NLTK’s sentiment analysis to determine the positive, negative, neutral, and compound values. Finally, the Spotify Web API was used to determine more attributes of the top songs of each year.\u003C/p>\n\u003Ch2 id=\"description-of-data-collected\">Description of Data Collected\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://github.com/jeeminhan/MuSentiment/blob/main/Master_Song_Dataset.csv\">Master-Song-Dataset.csv\u003C/a> - Collection of Billboard Songs, Lyrics, Spotify Features, and Sentiment Analysis\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/jeeminhan/MuSentiment/blob/main/depression_data.csv\">depression-data.csv\u003C/a> - Data collected about depression from the CDC\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/jeeminhan/MuSentiment/blob/main/drug_datacsv.csv\">drug_datacsv.csv\u003C/a> - Data collected about drug usage from the CDC\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/jeeminhan/MuSentiment/tree/main/Lyrics\">Lyrics\u003C/a> - Lyrics collected into individual textfiles for each song\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"analysis\">Analysis\u003C/h2>\n\u003Cp>The main idea of the project was to see if popular songs and their possible message would affect the general population’s mental health. The average depression rate was compared to the average positive and negative sentiment rating on top songs.\u003C/p>\n\u003Ch3 id=\"depression-vs-song\">Depression vs Song\u003C/h3>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137621202-66802374-b25f-4cb5-bf79-73cc67ec8ed0.png\" alt=\"image\">\u003C/p>\n\u003Cp>Although nothing is conclusive, there may be some correlation between depression and positive songs. One hypothesis our group established was that as people were struggling more with their mental health (2008), they turned to happier music which raised the overall score (as seen in 2010).\u003C/p>\n\u003Ch3 id=\"drug-usage-vs-song\">Drug usage vs song\u003C/h3>\n\u003Cp>A similar comparison was made with drug usage as well. However, there is not much correlation found between drug usage and song sentiment.\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137621126-f4fb3e47-a24e-4103-a145-af7d2585eafa.png\" alt=\"image\">\u003C/p>\n\u003Ch3 id=\"regression-model\">Regression Model\u003C/h3>\n\u003Cp>With the data collected from the Spotify API, we wanted to see if different factors (such as tempo, energy, key) would also have a direct relationship with negative sentiment. A regression model was created. The model was split 0.67-0.33 training/testing and had a root mean squared error of 0.0036. The result of the prediction is shown below\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137621145-caa1177c-6bfb-499c-a4c6-10d11f3575e2.png\" alt=\"image\">\u003C/p>\n\u003Ch3 id=\"word-clouds\">Word Clouds\u003C/h3>\n\u003Cp>The most commonly used words in the 25 most “negative” songs are:\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620645-2f4d5d47-69a2-4393-846d-d131b3229c68.png\" alt=\"image\">\u003C/p>\n\u003Cp>*A profanity filter had to be run as profane words were heavily used\u003C/p>\n\u003Cp>The most commonly used words in the 25 most “positive” songs are:\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137621983-522b5bfc-0d33-474d-8dcf-7395dd8b90d0.png\" alt=\"image\">\u003C/p>\n\u003Cp>These word clouds helped us understand better specific words that were the most influential on sentiment.\u003C/p>\n\u003Ch3 id=\"yearly-trends\">Yearly Trends\u003C/h3>\n\u003Cp>Additionally, we were able to look at the trend of the percentage of positive, negative, and neutral tendencies of songs per year.\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620684-f21e7832-9edf-418f-b4bb-26e41006f7b4.png\" alt=\"image\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620690-7d447b37-8080-4c39-930f-a8df44fce3e7.png\" alt=\"image\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620692-d98aa578-c3ab-4aec-b46d-598bbca29f84.png\" alt=\"image\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620695-38e53ee8-2180-4e00-856f-76525fe3c884.png\" alt=\"image\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620696-43fa7c4b-9f53-4cfb-aa0b-2a70fef1c2b5.png\" alt=\"image\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620698-838060e9-8197-4375-a42f-a7953c0c2c39.png\" alt=\"image\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620700-a77db526-6ca0-4ce4-8c3e-421dc02c345c.png\" alt=\"image\">\u003C/p>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137620701-7519db31-36b6-45e6-9e51-e93754a37d93.png\" alt=\"image\">\u003C/p>\n\u003Cp>The sporadic nature of the graphs made it hard to really analyze trends. This is possibly due to the fact that humans are so different that their song choice will not always go by a pattern. Our moods/weather/time of day plays a big role in what kind of music we listen to.\u003C/p>\n\u003Ch2 id=\"reflection\">Reflection\u003C/h2>\n\u003Cp>There were a lot of challenges that we had to face, but we think one of the biggest ones was definitely analyzing the data that we scraped and trying to find the relationships or lack thereof between them. One of the things that made it hard to find relationships between the data was the fact that a lot of census data on depression and drug usage was collected every two years. That’s a lot of time between each of the points and so analyzing any relationships was not as accurate as we would like. There was not much we could do about this as we wanted to work with the CDC’s data and so had to make do with what we had. If we had more time we would have liked to look for more data and try to look through different relationships to see if there were any more important findings in the various datasets we created.\u003C/p>\n\u003Ch4 id=\"bonus-star\">Bonus star\u003C/h4>\n\u003Cp>\u003Cimg src=\"https://user-images.githubusercontent.com/72060730/137617470-ec425abc-802d-406d-9688-de485173b69e.png\" alt=\"image\">\u003C/p>",{"headings":156,"localImagePaths":193,"remoteImagePaths":194,"frontmatter":195,"imagePaths":196},[157,158,161,164,167,170,174,177,180,183,186,189],{"depth":52,"slug":142,"text":145},{"depth":30,"slug":159,"text":160},"texas-am-datathon-repository","Texas A&M Datathon Repository",{"depth":30,"slug":162,"text":163},"our-approach","Our approach",{"depth":30,"slug":165,"text":166},"description-of-data-collected","Description of Data Collected",{"depth":30,"slug":168,"text":169},"analysis","Analysis",{"depth":171,"slug":172,"text":173},3,"depression-vs-song","Depression vs Song",{"depth":171,"slug":175,"text":176},"drug-usage-vs-song","Drug usage vs song",{"depth":171,"slug":178,"text":179},"regression-model","Regression Model",{"depth":171,"slug":181,"text":182},"word-clouds","Word Clouds",{"depth":171,"slug":184,"text":185},"yearly-trends","Yearly Trends",{"depth":30,"slug":187,"text":188},"reflection","Reflection",{"depth":190,"slug":191,"text":192},4,"bonus-star","Bonus star",[],[],{"title":145,"description":146,"previewImage":19,"pubDate":58,"icon":14,"heroImage":148,"youtube":149},[],"workout-buddy",{"id":197,"data":199,"body":204,"filePath":205,"assetImports":206,"digest":209,"rendered":210},{"icon":14,"title":200,"description":201,"pubDate":202,"heroImage":203,"previewImage":19},"Workout Buddy","A Image detection based squat and pushup form helper ",["Date","2024-06-18T15:00:00.000Z"],"/src/assets/workoutbuddy.png","# One Paragraph Write Up\n\nWorkout buddy is a sqqquat and pushup tracker with a UI system that helped people with their form.\n\n![Graphic 1](../../assets/workoutbuddy2.png)\n![Workout Buddy graphic](../../assets/workoutbuddy4.png)\n\n\n## Additional Presentations and Documents\n[Report](https://drive.google.com/file/d/1kKqB6mGcjvgitG0Q8Sbn1KODpxHzu8GM/view?usp=sharing)","src/content/blog/workout-buddy.md",[207,208],"../../assets/workoutbuddy2.png","../../assets/workoutbuddy4.png","c682ccbfcbb2dea6",{"html":211,"metadata":212},"\u003Ch1 id=\"one-paragraph-write-up\">One Paragraph Write Up\u003C/h1>\n\u003Cp>Workout buddy is a sqqquat and pushup tracker with a UI system that helped people with their form.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../assets/workoutbuddy2.png&#x22;,&#x22;alt&#x22;:&#x22;Graphic 1&#x22;,&#x22;index&#x22;:0}\">\n\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../assets/workoutbuddy4.png&#x22;,&#x22;alt&#x22;:&#x22;Workout Buddy graphic&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"additional-presentations-and-documents\">Additional Presentations and Documents\u003C/h2>\n\u003Cp>\u003Ca href=\"https://drive.google.com/file/d/1kKqB6mGcjvgitG0Q8Sbn1KODpxHzu8GM/view?usp=sharing\">Report\u003C/a>\u003C/p>",{"headings":213,"localImagePaths":220,"remoteImagePaths":221,"frontmatter":222,"imagePaths":223},[214,217],{"depth":52,"slug":215,"text":216},"one-paragraph-write-up","One Paragraph Write Up",{"depth":30,"slug":218,"text":219},"additional-presentations-and-documents","Additional Presentations and Documents",[207,208],[],{"title":200,"description":201,"previewImage":19,"pubDate":35,"icon":14,"heroImage":203},[207,208],"example",{"id":224,"data":226,"body":231,"filePath":232,"digest":233,"rendered":234},{"icon":14,"title":227,"description":228,"pubDate":229,"heroImage":230},"Markdown example","Foto de \u003Ca class=\"underline\" href=\"https://unsplash.com/es/@adrigeo_?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Adrianna Geo\u003C/a> en \u003Ca href=\"https://unsplash.com/es/fotos/una-pintura-en-el-techo-de-un-edificio-1rBg5YSi00c?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\" class=\"underline\">Unsplash\u003C/a> ",["Date","2022-07-07T15:00:00.000Z"],"/src/assets/adriana.jpg","This example is from https://markdown-it.github.io/\n\n---\n\n**Advertisement :)**\n\n- **[pica](https://nodeca.github.io/pica/demo/)** - high quality and fast image\n  resize in browser.\n- **[babelfish](https://github.com/nodeca/babelfish/)** - developer friendly\n  i18n with plurals support and easy syntax.\n\nYou will like those projects!\n\n---\n\n# h1 Heading 8-)\n\n## h2 Heading\n\n### h3 Heading\n\n#### h4 Heading\n\n##### h5 Heading\n\n###### h6 Heading\n\n## Horizontal Rules\n\n---\n\n---\n\n---\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,, -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n## Emphasis\n\n**This is bold text**\n\n**This is bold text**\n\n_This is italic text_\n\n_This is italic text_\n\n~~Strikethrough~~\n\n## Blockquotes\n\n> Blockquotes can also be nested...\n>\n> > ...by using additional greater-than signs right next to each other...\n> >\n> > > ...or with spaces between arrows.\n\n## Lists\n\nUnordered\n\n- Create a list by starting a line with `+`, `-`, or `*`\n- Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    - Ac tristique libero volutpat at\n    * Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n- Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n4. You can use sequential numbers...\n5. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n## Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\n\nSyntax highlighting\n\n```js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n## Tables\n\n| Option | Description                                                               |\n| ------ | ------------------------------------------------------------------------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default.    |\n| ext    | extension to be used for dest files.                                      |\n\nRight aligned columns\n\n| Option |                                                               Description |\n| -----: | ------------------------------------------------------------------------: |\n|   data | path to data files to supply the data that will be passed into templates. |\n| engine |    engine to be used for processing templates. Handlebars is the default. |\n|    ext |                                      extension to be used for dest files. |\n\n## Links\n\n[link text](http://dev.nodeca.com)\n\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\n\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\n\n## Images\n\n![Minion](https://octodex.github.com/images/minion.png)\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\"\n\n## Plugins\n\nThe killer feature of `markdown-it` is very effective support of\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\n\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\n\n> Classic markup: :wink: :cry: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\n\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\n\n- 19^th^\n- H~2~O\n\n### [\\\u003Cins>](https://github.com/markdown-it/markdown-it-ins)\n\n++Inserted text++\n\n### [\\\u003Cmark>](https://github.com/markdown-it/markdown-it-mark)\n\n==Marked text==\n\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\n\nTerm 1\n\n: Definition 1\nwith lazy continuation.\n\nTerm 2 with _inline markup_\n\n: Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n~ Definition 1\n\nTerm 2\n~ Definition 2a\n~ Definition 2b\n\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n\\*[HTML]: Hyper Text Markup Language\n\n### [Custom containers](https://github.com/markdown-it/markdown-it-container)\n\n::: warning\n_here be dragons_\n:::","src/content/blog/example.md","a97b208d3c760621",{"html":235,"metadata":236},"\u003Cp>This example is from \u003Ca href=\"https://markdown-it.github.io/\">https://markdown-it.github.io/\u003C/a>\u003C/p>\n\u003Chr>\n\u003Cp>\u003Cstrong>Advertisement :)\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://nodeca.github.io/pica/demo/\">pica\u003C/a>\u003C/strong> - high quality and fast image\nresize in browser.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://github.com/nodeca/babelfish/\">babelfish\u003C/a>\u003C/strong> - developer friendly\ni18n with plurals support and easy syntax.\u003C/li>\n\u003C/ul>\n\u003Cp>You will like those projects!\u003C/p>\n\u003Chr>\n\u003Ch1 id=\"h1-heading-8\">h1 Heading 8-)\u003C/h1>\n\u003Ch2 id=\"h2-heading\">h2 Heading\u003C/h2>\n\u003Ch3 id=\"h3-heading\">h3 Heading\u003C/h3>\n\u003Ch4 id=\"h4-heading\">h4 Heading\u003C/h4>\n\u003Ch5 id=\"h5-heading\">h5 Heading\u003C/h5>\n\u003Ch6 id=\"h6-heading\">h6 Heading\u003C/h6>\n\u003Ch2 id=\"horizontal-rules\">Horizontal Rules\u003C/h2>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Ch2 id=\"typographic-replacements\">Typographic replacements\u003C/h2>\n\u003Cp>Enable typographer option to see result.\u003C/p>\n\u003Cp>(c) (C) (r) (R) (tm) (TM) (p) (P) +-\u003C/p>\n\u003Cp>test.. test… test… test?… test!…\u003C/p>\n\u003Cp>!!!!!! ???? ,, — ---\u003C/p>\n\u003Cp>“Smartypants, double quotes” and ‘single quotes’\u003C/p>\n\u003Ch2 id=\"emphasis\">Emphasis\u003C/h2>\n\u003Cp>\u003Cstrong>This is bold text\u003C/strong>\u003C/p>\n\u003Cp>\u003Cstrong>This is bold text\u003C/strong>\u003C/p>\n\u003Cp>\u003Cem>This is italic text\u003C/em>\u003C/p>\n\u003Cp>\u003Cem>This is italic text\u003C/em>\u003C/p>\n\u003Cp>\u003Cdel>Strikethrough\u003C/del>\u003C/p>\n\u003Ch2 id=\"blockquotes\">Blockquotes\u003C/h2>\n\u003Cblockquote>\n\u003Cp>Blockquotes can also be nested…\u003C/p>\n\u003Cblockquote>\n\u003Cp>…by using additional greater-than signs right next to each other…\u003C/p>\n\u003Cblockquote>\n\u003Cp>…or with spaces between arrows.\u003C/p>\n\u003C/blockquote>\n\u003C/blockquote>\n\u003C/blockquote>\n\u003Ch2 id=\"lists\">Lists\u003C/h2>\n\u003Cp>Unordered\u003C/p>\n\u003Cul>\n\u003Cli>Create a list by starting a line with \u003Ccode>+\u003C/code>, \u003Ccode>-\u003C/code>, or \u003Ccode>*\u003C/code>\u003C/li>\n\u003Cli>Sub-lists are made by indenting 2 spaces:\n\u003Cul>\n\u003Cli>Marker character change forces new list start:\n\u003Cul>\n\u003Cli>Ac tristique libero volutpat at\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>Facilisis in pretium nisl aliquet\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>Nulla volutpat aliquam velit\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Very easy!\u003C/li>\n\u003C/ul>\n\u003Cp>Ordered\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Cp>Lorem ipsum dolor sit amet\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Consectetur adipiscing elit\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Integer molestie lorem at massa\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>You can use sequential numbers…\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>…or keep all the numbers as \u003Ccode>1.\u003C/code>\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003Cp>Start numbering with offset:\u003C/p>\n\u003Col start=\"57\">\n\u003Cli>foo\u003C/li>\n\u003Cli>bar\u003C/li>\n\u003C/ol>\n\u003Ch2 id=\"code\">Code\u003C/h2>\n\u003Cp>Inline \u003Ccode>code\u003C/code>\u003C/p>\n\u003Cp>Indented code\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>// Some comments\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>line 1 of code\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>line 2 of code\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>line 3 of code\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Block code “fences”\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>Sample text here...\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Syntax highlighting\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">var\u003C/span>\u003Cspan style=\"color:#B392F0\"> foo\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">bar\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> bar\u003C/span>\u003Cspan style=\"color:#F97583\">++\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">foo\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">5\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"tables\">Tables\u003C/h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Option\u003C/th>\u003Cth>Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>data\u003C/td>\u003Ctd>path to data files to supply the data that will be passed into templates.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>engine\u003C/td>\u003Ctd>engine to be used for processing templates. Handlebars is the default.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>ext\u003C/td>\u003Ctd>extension to be used for dest files.\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Cp>Right aligned columns\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth align=\"right\">Option\u003C/th>\u003Cth align=\"right\">Description\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd align=\"right\">data\u003C/td>\u003Ctd align=\"right\">path to data files to supply the data that will be passed into templates.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd align=\"right\">engine\u003C/td>\u003Ctd align=\"right\">engine to be used for processing templates. Handlebars is the default.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd align=\"right\">ext\u003C/td>\u003Ctd align=\"right\">extension to be used for dest files.\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"links\">Links\u003C/h2>\n\u003Cp>\u003Ca href=\"http://dev.nodeca.com\">link text\u003C/a>\u003C/p>\n\u003Cp>\u003Ca href=\"http://nodeca.github.io/pica/demo/\" title=\"title text!\">link with title\u003C/a>\u003C/p>\n\u003Cp>Autoconverted link \u003Ca href=\"https://github.com/nodeca/pica\">https://github.com/nodeca/pica\u003C/a> (enable linkify to see)\u003C/p>\n\u003Ch2 id=\"images\">Images\u003C/h2>\n\u003Cp>\u003Cimg src=\"https://octodex.github.com/images/minion.png\" alt=\"Minion\">\n\u003Cimg src=\"https://octodex.github.com/images/stormtroopocat.jpg\" alt=\"Stormtroopocat\" title=\"The Stormtroopocat\">\u003C/p>\n\u003Cp>Like links, Images also have a footnote style syntax\u003C/p>\n\u003Cp>\u003Cimg src=\"https://octodex.github.com/images/dojocat.jpg\" alt=\"Alt text\" title=\"The Dojocat\">\u003C/p>\n\u003Cp>With a reference later in the document defining the URL location:\u003C/p>\n\u003Ch2 id=\"plugins\">Plugins\u003C/h2>\n\u003Cp>The killer feature of \u003Ccode>markdown-it\u003C/code> is very effective support of\n\u003Ca href=\"https://www.npmjs.org/browse/keyword/markdown-it-plugin\">syntax plugins\u003C/a>.\u003C/p>\n\u003Ch3 id=\"emojies\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-emoji\">Emojies\u003C/a>\u003C/h3>\n\u003Cblockquote>\n\u003Cp>Classic markup: :wink: :cry: :laughing: :yum:\u003C/p>\n\u003Cp>Shortcuts (emoticons): :-) :-( 8-) ;)\u003C/p>\n\u003C/blockquote>\n\u003Cp>see \u003Ca href=\"https://github.com/markdown-it/markdown-it-emoji#change-output\">how to change output\u003C/a> with twemoji.\u003C/p>\n\u003Ch3 id=\"subscript--superscript\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-sub\">Subscript\u003C/a> / \u003Ca href=\"https://github.com/markdown-it/markdown-it-sup\">Superscript\u003C/a>\u003C/h3>\n\u003Cul>\n\u003Cli>19^th^\u003C/li>\n\u003Cli>H\u003Cdel>2\u003C/del>O\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"ins\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-ins\">&#x3C;ins>\u003C/a>\u003C/h3>\n\u003Cp>++Inserted text++\u003C/p>\n\u003Ch3 id=\"mark\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-mark\">&#x3C;mark>\u003C/a>\u003C/h3>\n\u003Cp>==Marked text==\u003C/p>\n\u003Ch3 id=\"footnotes\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-footnote\">Footnotes\u003C/a>\u003C/h3>\n\u003Cp>Footnote 1 link\u003Csup>\u003Ca href=\"#user-content-fn-first\" id=\"user-content-fnref-first\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">1\u003C/a>\u003C/sup>.\u003C/p>\n\u003Cp>Footnote 2 link\u003Csup>\u003Ca href=\"#user-content-fn-second\" id=\"user-content-fnref-second\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2\u003C/a>\u003C/sup>.\u003C/p>\n\u003Cp>Inline footnote^[Text of inline footnote] definition.\u003C/p>\n\u003Cp>Duplicated footnote reference\u003Csup>\u003Ca href=\"#user-content-fn-second\" id=\"user-content-fnref-second-2\" data-footnote-ref=\"\" aria-describedby=\"footnote-label\">2\u003C/a>\u003C/sup>.\u003C/p>\n\u003Ch3 id=\"definition-lists\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-deflist\">Definition lists\u003C/a>\u003C/h3>\n\u003Cp>Term 1\u003C/p>\n\u003Cp>: Definition 1\nwith lazy continuation.\u003C/p>\n\u003Cp>Term 2 with \u003Cem>inline markup\u003C/em>\u003C/p>\n\u003Cp>: Definition 2\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>    { some code, part of Definition 2 }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>Third paragraph of definition 2.\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cem>Compact style:\u003C/em>\u003C/p>\n\u003Cp>Term 1\n~ Definition 1\u003C/p>\n\u003Cp>Term 2\n~ Definition 2a\n~ Definition 2b\u003C/p>\n\u003Ch3 id=\"abbreviations\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-abbr\">Abbreviations\u003C/a>\u003C/h3>\n\u003Cp>This is HTML abbreviation example.\u003C/p>\n\u003Cp>It converts “HTML”, but keep intact partial entries like “xxxHTMLyyy” and so on.\u003C/p>\n\u003Cp>*[HTML]: Hyper Text Markup Language\u003C/p>\n\u003Ch3 id=\"custom-containers\">\u003Ca href=\"https://github.com/markdown-it/markdown-it-container\">Custom containers\u003C/a>\u003C/h3>\n\u003Cp>::: warning\n\u003Cem>here be dragons\u003C/em>\n:::\u003C/p>\n\u003Csection data-footnotes=\"\" class=\"footnotes\">\u003Ch2 class=\"sr-only\" id=\"footnote-label\">Footnotes\u003C/h2>\n\u003Col>\n\u003Cli id=\"user-content-fn-first\">\n\u003Cp>Footnote \u003Cstrong>can have markup\u003C/strong>\u003C/p>\n\u003Cp>and multiple paragraphs. \u003Ca href=\"#user-content-fnref-first\" data-footnote-backref=\"\" aria-label=\"Back to reference 1\" class=\"data-footnote-backref\">↩\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli id=\"user-content-fn-second\">\n\u003Cp>Footnote text. \u003Ca href=\"#user-content-fnref-second\" data-footnote-backref=\"\" aria-label=\"Back to reference 2\" class=\"data-footnote-backref\">↩\u003C/a> \u003Ca href=\"#user-content-fnref-second-2\" data-footnote-backref=\"\" aria-label=\"Back to reference 2-2\" class=\"data-footnote-backref\">↩\u003Csup>2\u003C/sup>\u003C/a>\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003C/section>",{"headings":237,"localImagePaths":314,"remoteImagePaths":315,"frontmatter":316,"imagePaths":318},[238,241,244,247,250,254,258,261,264,267,270,273,276,279,282,285,288,291,294,297,300,303,306,309,312],{"depth":52,"slug":239,"text":240},"h1-heading-8","h1 Heading 8-)",{"depth":30,"slug":242,"text":243},"h2-heading","h2 Heading",{"depth":171,"slug":245,"text":246},"h3-heading","h3 Heading",{"depth":190,"slug":248,"text":249},"h4-heading","h4 Heading",{"depth":251,"slug":252,"text":253},5,"h5-heading","h5 Heading",{"depth":255,"slug":256,"text":257},6,"h6-heading","h6 Heading",{"depth":30,"slug":259,"text":260},"horizontal-rules","Horizontal Rules",{"depth":30,"slug":262,"text":263},"typographic-replacements","Typographic replacements",{"depth":30,"slug":265,"text":266},"emphasis","Emphasis",{"depth":30,"slug":268,"text":269},"blockquotes","Blockquotes",{"depth":30,"slug":271,"text":272},"lists","Lists",{"depth":30,"slug":274,"text":275},"code","Code",{"depth":30,"slug":277,"text":278},"tables","Tables",{"depth":30,"slug":280,"text":281},"links","Links",{"depth":30,"slug":283,"text":284},"images","Images",{"depth":30,"slug":286,"text":287},"plugins","Plugins",{"depth":171,"slug":289,"text":290},"emojies","Emojies",{"depth":171,"slug":292,"text":293},"subscript--superscript","Subscript / Superscript",{"depth":171,"slug":295,"text":296},"ins","\u003Cins>",{"depth":171,"slug":298,"text":299},"mark","\u003Cmark>",{"depth":171,"slug":301,"text":302},"footnotes","Footnotes",{"depth":171,"slug":304,"text":305},"definition-lists","Definition lists",{"depth":171,"slug":307,"text":308},"abbreviations","Abbreviations",{"depth":171,"slug":310,"text":311},"custom-containers","Custom containers",{"depth":30,"slug":313,"text":302},"footnote-label",[],[],{"title":227,"description":228,"icon":14,"pubDate":317,"heroImage":230},"Jul 08 2022",[],"raytheon",{"id":319,"data":321,"body":326,"filePath":327,"digest":328,"rendered":329},{"icon":14,"title":322,"description":323,"pubDate":324,"heroImage":325,"previewImage":19},"Raytheon Internship","3 month internship in El Segundo, California ",["Date","2022-08-11T15:00:00.000Z"],"/src/assets/raytheon.jpg","## Experience\n\nRaytheon is a United States government contractor that makes weapons and fighter jets. I was in a department that worked on the radars. On my 3 month internship there I learned about radar technology as well as my main project was working within the virtulization software Docker and the virtualization software jenkins and creating a script to clean up unused streams within jenkins.","src/content/blog/raytheon.md","c2756de425f3f9bf",{"html":330,"metadata":331},"\u003Ch2 id=\"experience\">Experience\u003C/h2>\n\u003Cp>Raytheon is a United States government contractor that makes weapons and fighter jets. I was in a department that worked on the radars. On my 3 month internship there I learned about radar technology as well as my main project was working within the virtulization software Docker and the virtualization software jenkins and creating a script to clean up unused streams within jenkins.\u003C/p>",{"headings":332,"localImagePaths":336,"remoteImagePaths":337,"frontmatter":338,"imagePaths":340},[333],{"depth":30,"slug":334,"text":335},"experience","Experience",[],[],{"title":322,"description":323,"previewImage":19,"pubDate":339,"icon":14,"heroImage":325},"Aug 12 2022",[]]